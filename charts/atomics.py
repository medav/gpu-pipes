

# nb, nw, nv
data_lookup = {
    (1, 1, 1): 21262994,
    (1, 2, 1): 25519036,
    (1, 4, 1): 25518970,
    (1, 8, 1): 24309048,
    (1, 16, 1): 19827634,
    (1, 32, 1): 10950932,
    (3, 1, 1): 75745768,
    (3, 2, 1): 75745968,
    (3, 4, 1): 75746560,
    (3, 8, 1): 72154992,
    (3, 16, 1): 58850808,
    (3, 32, 1): 32504338,
    (6, 1, 1): 151498208,
    (6, 2, 1): 151499776,
    (6, 4, 1): 151495456,
    (6, 8, 1): 126335992,
    (6, 16, 1): 66192816,
    (6, 32, 1): 33497570,
    (13, 1, 1): 328236800,
    (13, 2, 1): 328242752,
    (13, 4, 1): 246452048,
    (13, 8, 1): 134996624,
    (13, 16, 1): 67498856,
    (13, 32, 1): 33745524,
    (27, 1, 1): 681703168,
    (27, 2, 1): 487088800,
    (27, 4, 1): 269994048,
    (27, 8, 1): 134997856,
    (27, 16, 1): 67499480,
    (27, 32, 1): 33749728,
    (54, 1, 1): 984614464,
    (54, 2, 1): 539985920,
    (54, 4, 1): 269996000,
    (54, 8, 1): 134998704,
    (54, 16, 1): 67499584,
    (54, 32, 1): 33749876,
    (108, 1, 1): 1079974016,
    (108, 2, 1): 539993024,
    (108, 4, 1): 269998080,
    (108, 8, 1): 134999248,
    (108, 16, 1): 67499752,
    (108, 32, 1): 33749872,
    (1, 1, 3): 25519036,
    (1, 2, 3): 25519170,
    (1, 4, 3): 25518770,
    (1, 8, 3): 24308926,
    (1, 16, 3): 19827432,
    (1, 32, 3): 10950944,
    (3, 1, 3): 75757728,
    (3, 2, 3): 75765760,
    (3, 4, 3): 75754976,
    (3, 8, 3): 72164416,
    (3, 16, 3): 58859088,
    (3, 32, 3): 31174250,
    (6, 1, 3): 151512320,
    (6, 2, 3): 151508784,
    (6, 4, 3): 151507600,
    (6, 8, 3): 126555384,
    (6, 16, 3): 63698692,
    (6, 32, 3): 30624316,
    (13, 1, 3): 328278368,
    (13, 2, 3): 328272416,
    (13, 4, 3): 233515680,
    (13, 8, 3): 129274368,
    (13, 16, 3): 63983536,
    (13, 32, 3): 33094252,
    (27, 1, 3): 681798400,
    (27, 2, 3): 487891840,
    (27, 4, 3): 254285696,
    (27, 8, 3): 129321592,
    (27, 16, 3): 66566540,
    (27, 32, 3): 32417266,
    (54, 1, 3): 967370624,
    (54, 2, 3): 518130336,
    (54, 4, 3): 258630512,
    (54, 8, 3): 128604240,
    (54, 16, 3): 63052084,
    (54, 32, 3): 33118520,
    (108, 1, 3): 1051480448,
    (108, 2, 3): 528265824,
    (108, 4, 3): 260409648,
    (108, 8, 3): 130973240,
    (108, 16, 3): 64333756,
    (108, 32, 3): 32062652,
    (1, 1, 6): 25519036,
    (1, 2, 6): 25519504,
    (1, 4, 6): 25519504,
    (1, 8, 6): 24309410,
    (1, 16, 6): 19827634,
    (1, 32, 6): 10950993,
    (3, 1, 6): 75750088,
    (3, 2, 6): 75750480,
    (3, 4, 6): 75753616,
    (3, 8, 6): 72157480,
    (3, 16, 6): 58855184,
    (3, 32, 6): 31173456,
    (6, 1, 6): 151503696,
    (6, 2, 6): 151506832,
    (6, 4, 6): 151498992,
    (6, 8, 6): 144321360,
    (6, 16, 6): 99394496,
    (6, 32, 6): 45436832,
    (13, 1, 6): 328246976,
    (13, 2, 6): 328256288,
    (13, 4, 6): 328242752,
    (13, 8, 6): 169132816,
    (13, 16, 6): 97810184,
    (13, 32, 6): 53242724,
    (27, 1, 6): 681785984,
    (27, 2, 6): 681733120,
    (27, 4, 6): 347691072,
    (27, 8, 6): 183955120,
    (27, 16, 6): 94538232,
    (27, 32, 6): 45749480,
    (54, 1, 6): 1363533184,
    (54, 2, 6): 763457472,
    (54, 4, 6): 383992736,
    (54, 8, 6): 201454016,
    (54, 16, 6): 97967384,
    (54, 32, 6): 48745320,
    (108, 1, 6): 1514295936,
    (108, 2, 6): 780299200,
    (108, 4, 6): 397000128,
    (108, 8, 6): 198038272,
    (108, 16, 6): 97236696,
    (108, 32, 6): 48748604,
    (1, 1, 13): 25519370,
    (1, 2, 13): 25518570,
    (1, 4, 13): 25519036,
    (1, 8, 13): 24308988,
    (1, 16, 13): 19827554,
    (1, 32, 13): 10950981,
    (3, 1, 13): 75748712,
    (3, 2, 13): 75749888,
    (3, 4, 13): 75750480,
    (3, 8, 13): 72157128,
    (3, 16, 13): 58854476,
    (3, 32, 13): 31172524,
    (6, 1, 13): 151503696,
    (6, 2, 13): 151496256,
    (6, 4, 13): 151498208,
    (6, 8, 13): 144313536,
    (6, 16, 13): 109284688,
    (6, 32, 13): 45658904,
    (13, 1, 13): 328260544,
    (13, 2, 13): 328243584,
    (13, 4, 13): 328244416,
    (13, 8, 13): 239806144,
    (13, 16, 13): 123473040,
    (13, 32, 13): 56210808,
    (27, 1, 13): 681740160,
    (27, 2, 13): 681734912,
    (27, 4, 13): 431910528,
    (27, 8, 13): 217731776,
    (27, 16, 13): 111517264,
    (27, 32, 13): 54628952,
    (54, 1, 13): 1363441536,
    (54, 2, 13): 785454208,
    (54, 4, 13): 427875872,
    (54, 8, 13): 219763568,
    (54, 16, 13): 112317128,
    (54, 32, 13): 55352256,
    (108, 1, 13): 1661440768,
    (108, 2, 13): 886959104,
    (108, 4, 13): 453104992,
    (108, 8, 13): 230003648,
    (108, 16, 13): 113476464,
    (108, 32, 13): 56370368,
    (1, 1, 27): 25518702,
    (1, 2, 27): 25518638,
    (1, 4, 27): 25518904,
    (1, 8, 27): 24309168,
    (1, 16, 27): 19827674,
    (1, 32, 27): 10950809,
    (3, 1, 27): 75752632,
    (3, 2, 27): 75748128,
    (3, 4, 27): 75748520,
    (3, 8, 27): 72158192,
    (3, 16, 27): 58853884,
    (3, 32, 27): 31173124,
    (6, 1, 27): 151497040,
    (6, 2, 27): 151502128,
    (6, 4, 27): 151505264,
    (6, 8, 27): 144316384,
    (6, 16, 27): 109130400,
    (6, 32, 27): 45244916,
    (13, 1, 27): 328235104,
    (13, 2, 27): 328227456,
    (13, 4, 27): 328229152,
    (13, 8, 27): 222298128,
    (13, 16, 27): 114808048,
    (13, 32, 27): 56927020,
    (27, 1, 27): 681727808,
    (27, 2, 27): 681719040,
    (27, 4, 27): 681734912,
    (27, 8, 27): 410412992,
    (27, 16, 27): 226995920,
    (27, 32, 27): 115025184,
    (54, 1, 27): 1363441536,
    (54, 2, 27): 1363427456,
    (54, 4, 27): 845786688,
    (54, 8, 27): 480071168,
    (54, 16, 27): 239143216,
    (54, 32, 27): 119629808,
    (108, 1, 27): 2727059456,
    (108, 2, 27): 1681918720,
    (108, 4, 27): 951450304,
    (108, 8, 27): 469089856,
    (108, 16, 27): 236939824,
    (108, 32, 27): 119737752,
    (1, 1, 54): 25519104,
    (1, 2, 54): 25519036,
    (1, 4, 54): 25518970,
    (1, 8, 54): 24308926,
    (1, 16, 54): 19827432,
    (1, 32, 54): 10950969,
    (3, 1, 54): 75756160,
    (3, 2, 54): 75754392,
    (3, 4, 54): 75755176,
    (3, 8, 54): 72161568,
    (3, 16, 54): 58857672,
    (3, 32, 54): 31171996,
    (6, 1, 54): 151504864,
    (6, 2, 54): 151503312,
    (6, 4, 54): 151499776,
    (6, 8, 54): 144317104,
    (6, 16, 54): 108312792,
    (6, 32, 54): 45961540,
    (13, 1, 54): 328274976,
    (13, 2, 54): 328272416,
    (13, 4, 54): 328258016,
    (13, 8, 54): 231368224,
    (13, 16, 54): 114634408,
    (13, 32, 54): 61148868,
    (27, 1, 54): 681803584,
    (27, 2, 54): 681731328,
    (27, 4, 54): 681766592,
    (27, 8, 54): 412710848,
    (27, 16, 54): 211137488,
    (27, 32, 54): 112575696,
    (54, 1, 54): 1363505024,
    (54, 2, 54): 1363505024,
    (54, 4, 54): 1354361600,
    (54, 8, 54): 802940096,
    (54, 16, 54): 442095744,
    (54, 32, 54): 218672112,
    (108, 1, 54): 2727108864,
    (108, 2, 54): 2726953728,
    (108, 4, 54): 1676214272,
    (108, 8, 54): 900621696,
    (108, 16, 54): 427163296,
    (108, 32, 54): 214493456,
    (1, 1, 108): 25517036,
    (1, 2, 108): 25517170,
    (1, 4, 108): 25518236,
    (1, 8, 108): 24307716,
    (1, 16, 108): 19826586,
    (1, 32, 108): 10950502,
    (3, 1, 108): 76116144,
    (3, 2, 108): 75962592,
    (3, 4, 108): 75950984,
    (3, 8, 108): 72527792,
    (3, 16, 108): 59116816,
    (3, 32, 108): 31160258,
    (6, 1, 108): 152210528,
    (6, 2, 108): 151987456,
    (6, 4, 108): 152182480,
    (6, 8, 108): 144910640,
    (6, 16, 108): 99092768,
    (6, 32, 108): 46033364,
    (13, 1, 108): 330026976,
    (13, 2, 108): 329732992,
    (13, 4, 108): 329768928,
    (13, 8, 108): 231330272,
    (13, 16, 108): 107119608,
    (13, 32, 108): 55023684,
    (27, 1, 108): 684908288,
    (27, 2, 108): 683743168,
    (27, 4, 108): 683741376,
    (27, 8, 108): 405981952,
    (27, 16, 108): 226061568,
    (27, 32, 108): 115190400,
    (54, 1, 108): 1368838784,
    (54, 2, 108): 1368621952,
    (54, 4, 108): 1357670784,
    (54, 8, 108): 827522560,
    (54, 16, 108): 443321824,
    (54, 32, 108): 224461776,
    (108, 1, 108): 2734093568,
    (108, 2, 108): 2737208320,
    (108, 4, 108): 1583253504,
    (108, 8, 108): 886158016,
    (108, 16, 108): 452134912,
    (108, 32, 108): 226568800
}

def lookup(nblocks : int, nwarps : int, nvars : int) -> float:
    return data_lookup[(nblocks, nwarps, nvars)]

import numpy as np
from matplotlib import pyplot as plt
import itertools

colors = plt.rcParams['axes.prop_cycle'].by_key()['color']
COL_WIDTH = (8.5 - 1.5 - 0.25) / 2
TEXT_WIDTH = 8.5 - 1.5

global_nvs = np.array([1, 3, 6, 13, 27, 54, 108])
global_nbs = np.array([1, 6, 27, 108])

fig, ax = plt.subplots(figsize=(COL_WIDTH, 2.5))

# for

for nb in global_nbs:
    mask = np.array([
        nb >= nv
        for nv in global_nvs
    ])

    perf = np.array([
        data_lookup[(nb, 4, nv)]
        for nv in global_nvs
    ])

    perf_per_block = perf / nb

    plural = 's' if nb > 1 else ''

    gb_per_sec = 32*1024 * perf / 2**30

    x_points = global_nvs[mask]
    y_points = perf[mask]

    ax.plot(x_points, y_points, label=f'{nb} Block{plural}', zorder=100 - nb, marker='o')

# plt.semilogx()
plt.loglog()
plt.legend(fontsize=8)

plt.xlabel('# Variables', fontsize=8)
plt.xticks(global_nvs, global_nvs, fontsize=8)

plt.ylabel('atomicAdd / sec', fontsize=8)
plt.yticks(fontsize=8)
# plt.ylim([0, 3])

plt.title('Performance of atomicAdd', fontsize=10)
plt.tight_layout()
plt.savefig('atomics.pdf')


